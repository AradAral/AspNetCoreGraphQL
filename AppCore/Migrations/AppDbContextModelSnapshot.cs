// <auto-generated />
using AspNetCoreGraphQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("AspNetCoreGraphQL.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 76,
                            Name = "Dale Carnegie"
                        },
                        new
                        {
                            Id = 2,
                            Age = 46,
                            Name = "Max Tegmark"
                        },
                        new
                        {
                            Id = 3,
                            Age = 53,
                            Name = "Sam Harris"
                        },
                        new
                        {
                            Id = 4,
                            Age = 47,
                            Name = "James Clear"
                        });
                });

            modelBuilder.Entity("AspNetCoreGraphQL.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Genre = "Self-help",
                            Name = "How to Win Fiends and Influence People",
                            Published = true
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Genre = "Science",
                            Name = "Life 3.0",
                            Published = true
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Genre = "Philosophy",
                            Name = "Free Will",
                            Published = true
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Genre = "Self-help",
                            Name = "Atomic Habits",
                            Published = true
                        });
                });

            modelBuilder.Entity("AspNetCoreGraphQL.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("AspNetCoreGraphQL.Models.Book", b =>
                {
                    b.HasOne("AspNetCoreGraphQL.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("AspNetCoreGraphQL.Models.Rating", b =>
                {
                    b.HasOne("AspNetCoreGraphQL.Models.Book", "Book")
                        .WithMany("Ratings")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("AspNetCoreGraphQL.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("AspNetCoreGraphQL.Models.Book", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
